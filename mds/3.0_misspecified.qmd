---
title: "When Y model is misspecified"
output: html_document
---

```{r setup, include=FALSE}
rm(list = ls())
library(magrittr)
library(ggplot2)
```

```{r batch job}
# batchtools::makeRegistry(
#   file.dir = "/n/janson_lab/lab/sma/CompDA_paper/r_batchtools_reg/misspecified",
#   package = c("magrittr"))
batchtools::loadRegistry(
  file.dir = "/n/janson_lab/lab/sma/CompDA_paper/r_batchtools_reg/misspecified",
  writeable = TRUE)
rm(list = ls())
```

```{r define job}
dir_output <- "/n/janson_lab/lab/sma/CompDA_paper/results/simulation/misspecified"
dir.create(dir_output, recursive = TRUE, showWarnings = FALSE)
dir.create(paste0(dir_output, "/fit"), recursive = TRUE, showWarnings = FALSE)
dir.create(paste0(dir_output, "/debug"), recursive = TRUE, showWarnings = FALSE)
dir.create(paste0(dir_output, "/data"), recursive = TRUE, showWarnings = FALSE)

tb_effetSize <- 
  tidyr::crossing(
    n_samples = 400,
    n_features = 200,
    signal_density = 0.1,
    effect_size = c(0, 0.05, 0.1, 0.2, 0.4)
  )

tb_job <- tb_effetSize %>% 
  tidyr::crossing(r_y = seq(1, 10),
                  r_x = seq(1, 20)) %>% 
  dplyr::mutate(i_job = seq(1, dplyr::n()))

# create random seed
set.seed(0)
tb_job <- tb_job %>% 
  dplyr::mutate(
    seed = ceiling(runif(n = nrow(tb_job), 0, 1) * 1e7)
  )
save(tb_job, 
     file = paste0(dir_output, "/tb_job.RData"))

one_job <- function(i_job) {
  methods_y <- c("glmnet", "svm", "rf", "gbt")
  
  # x data
  load("/n/janson_lab/lab/sma/CompDA_paper/data/simulation/mat_species.RData")
  source("/n/janson_lab/lab/sma/CompDA_paper/R/other_methods.R")
  source("/n/janson_lab/lab/sma/CompDA_paper/R/simulate_y.R")
  source("/n/janson_lab/lab/sma/CompDA_paper/R/helpers.R")
  
  load(paste0(dir_output, "/tb_job.RData"))
  for(ii_job in seq((i_job - 1) * n_job_each + 1, i_job * n_job_each)) {
    i_tb_job <- tb_job[ii_job, ]
    set.seed(i_tb_job$seed)
    
    i_x_obs <- mat_species[sample.int(nrow(mat_species), 
                                      size = i_tb_job$n_features),
                           seq(i_tb_job$n_samples * (i_tb_job$r_x - 1) + 1, 
                               i_tb_job$n_samples * i_tb_job$r_x)] %>% 
      apply(2, tss_withzero) %>% 
      t() 
    
    half_min <- min(setdiff(i_x_obs, 0)) / 2
    y_sim <- simulate_y_sqr(x = i_x_obs, 
                            effect_size = i_tb_job$effect_size, 
                            n_signal = i_tb_job$n_features * i_tb_job$signal_density, 
                            epsilon = half_min,
                            family = "binomial",
                            seed = ii_job)
    save(y_sim, file = paste0(dir_output, "/data/y_sim_", ii_job, ".RData"))
    
    # CompDA
    tb_fit <- methods_y %>% 
      purrr::map_dfr(function(i_method) {
        fit_CompDA <- 
          CompDA::CompDA(
            x = i_x_obs, y = y_sim$y, epsilon = half_min, 
            family_y = "binomial", method_y = i_method, m = 1e4, 
            debug_dir = NULL, verbose = FALSE)
        as.data.frame(fit_CompDA) %>% 
          tibble::rownames_to_column("feature") %>% 
          dplyr::mutate(method = i_method) %>% 
          return()
      })
    
    save(tb_fit, file = paste0(dir_output, "/fit/tb_fit_", ii_job, ".RData"))
  }
  
  return(NULL)
}
```

```{r submit jobs}
batchtools::clearRegistry()
n_job_each <- 1
tb_ids <- batchtools::batchMap(one_job,
                               i_job = seq(1, nrow(tb_job) / n_job_each))
batchtools::batchExport(list(dir_output = dir_output,
                             n_job_each = n_job_each))

# Grid parameters
ncpus <- 1
partition <- "janson_cascade,shared"
walltime <- 3600 * 10

batchtools::submitJobs(ids = seq(1, 10),
                       resources =  list(ncpus = ncpus,
                                         partition = partition,
                                         walltime = walltime))
batchtools::submitJobs(ids = batchtools::findNotSubmitted()$job.id,
                       resources =  list(ncpus = ncpus,
                                         partition = partition,
                                         walltime = walltime))
```
