function constr = get_constr(p, type,intercept)
if type==1
if intercept ==0
    constr =[[ones(10,1); zeros(p-10,1)], ...
		[zeros(10,1); ones(6,1); zeros(p-16,1)], ...
		[zeros(16,1); ones(4,1); zeros(p-20,1)], ...
		[zeros(20,1); ones(3,1); zeros(p-23,1)], ...
		[zeros(23,1); ones(7,1); zeros(p-30,1)], ...
		[zeros(30,1); ones(2,1); zeros(p-32,1)], ...
		[zeros(32,1); ones(8,1); zeros(p-40,1)], ...
		[zeros(40,1); ones(p-40,1)]];
else
     constr =[[ones(10,1); zeros(p-10,1)], ...
		[zeros(10,1); ones(6,1); zeros(p-16,1)], ...
		[zeros(16,1); ones(4,1); zeros(p-20,1)], ...
		[zeros(20,1); ones(3,1); zeros(p-23,1)], ...
		[zeros(23,1); ones(7,1); zeros(p-30,1)], ...
		[zeros(30,1); ones(2,1); zeros(p-32,1)], ...
		[zeros(32,1); ones(8,1); zeros(p-40,1)], ...
		[zeros(40,1); ones(p-40,1)]];
     constr = [zeros(1,8); constr];
end
end
if type==2
    if intercept ==0
    constr =[[ones(6,1); zeros(p-6,1)], ...
		[zeros(6,1); ones(4,1); zeros(p-10,1)], ...
		[zeros(10,1); ones(4,1); zeros(p-14,1)], ...
		[zeros(14,1); ones(3,1); zeros(p-17,1)]];
    constr = [constr; zeros(2,4)];
else
      constr =[[ones(6,1); zeros(p-9,1)], ... 
		[zeros(6,1); ones(4,1); zeros(p-13,1)], ...
		[zeros(10,1); ones(6,1); zeros(p-19,1)], ...
		[zeros(16,1); ones(3,1); zeros(p-22,1)]];
     constr = [zeros(1,4); constr; zeros(2,4)];
    end
end
if type==3
    if intercept ==0
    constr =[[ones(6,1); zeros(p-6,1)], ...
		[zeros(6,1); ones(4,1); zeros(p-10,1)], ...
		[zeros(10,1); ones(4,1); zeros(p-14,1)], ...
		[zeros(14,1); ones(3,1); zeros(p-17,1)]];
    constr = [constr; zeros(2,4)];
else
      constr =[[ones(3,1); zeros(p-6,1)], ... 
		[zeros(3,1); ones(4,1); zeros(p-10,1)], ...
		[zeros(7,1); ones(6,1); zeros(p-16,1)], ...
		[zeros(13,1); ones(10,1); zeros(p-26,1)]];
     constr = [zeros(1,4); constr; zeros(2,4)];
    end
end